#!/bin/sh

# ====== 変数の設定 ======
# 環境変数の設定
export LC_ALL=C
export LANG=C

# GNU coreutilsの挙動をPOSIXに準拠
export POSIXLY_CORRECT=1

set -e

# デフォルトの変数を設定
api="openbd"
result=""
isbn_arg=""
fallback_enabled=0

# 引数を解析してオプションとISBNを特定
while [ "${#}" -gt 0 ]; do

    case "${1}" in

		# openBD
        -o)

            api="openbd"
            shift
            ;;

		# 国立国会図書館
        -n)

            api="ndl"
            shift
            ;;

		# フォールバック
		-f)

			fallback_enabled=1
			shift
			;;

		# 未知のオプション
        -*)

            echo "Unknown option: $1" 1>&2
            exit 1
            ;;

        *)

            # ISBN引数
            if [ -z "${isbn_arg}" ]; then

                isbn_arg="${1}"

            else

                # 複数のISBNが指定された場合
                echo "Error: Multiple ISBNs provided." 1>&2
                exit 1
				
            fi

            shift
            ;;

    esac

done

# ISBNの入力を確認
if [ -p /dev/stdin ] ; then

	# パイプから標準入力をISBNとして使用
	isbn=$(cat - )

elif [ -n "${isbn_arg}" ] ; then

	# コマンドライン引数でISBNが指定されている場合
	isbn="${isbn_arg}"

else

    # ISBNが指定されていない場合
    echo "Error: ISBN not provided." 1>&2
    exit 1

fi

set -u
# ====== 変数の設定ここまで ======


# ====== 関数の設定 ======
# APIから書籍情報を取得する関数
fetch_data() {

	url="${1}"

	# wgetがシステム内に存在するかを確認
	if type wget > /dev/null 2>&1 ; then

		# wgetでapiを叩く
		wget -q -O - "${url}"

	# curlがシステム内に存在するかを確認
	elif type curl > /dev/null 2>&1 ; then
		
		# curlでapiを叩く
		curl -L -s "${url}"

	else

		# wgetもcurlもない場合はメッセージを表示
		echo 'please install "wget" or "curl"' 1>&2
		exit 1

	fi

}

# openBDから書籍情報を取得する関数
fetch_openbd() {

    isbn_val="${1}"
    url="https://api.openbd.jp/v1/get?isbn=${isbn_val}&pretty"

    fetch_data "${url}" | 

	# isbn,タイトル,出版社,発売日,著者を抽出
    grep -F -e "isbn" -e "title" -e "publisher" -e "pubdate" -e "author" |

	# 区切り文字をダブルクォートに指定
    awk -F "\"" '

	# 最終行以外を出力
    NR < 5{

        print $4 

    }

    END{

		# カンマを削除
        gsub("," , "" , $4)

		# "西暦-ダブルクォート"の部分を削除
        gsub(/[0-9][0-9][0-9][0-9]-/ , "" , $4)

		# "西暦-西暦ダブルクォート"の部分を削除
        gsub(/[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]/ , "" , $4)

		# "末尾が西暦とダブルクォート"の部分を削除
        gsub(/[0-9][0-9][0-9][0-9]"$/ , "" , $4)

        print $4

    }
    ' |

	# 区切り文字をカンマに指定,列を行に置換
    paste -s -d ',' - |

	# 空行を削除
    sed '/^$/d'

}

# 国立国会図書館から書籍情報を取得する関数
fetch_ndl() {

    isbn_val="${1}"
    url="https://iss.ndl.go.jp/api/sru?operation=searchRetrieve&version=1.2&recordSchema=dcndl&onlyBib=true&recordPacking=xml&query=isbn=${isbn_val}%20AND%20dpid=iss-ndl-opac"

    fetch_data "${url}" |

    parsrx.sh |

    grep -F -e "BibResource/dcterms:title" -e "BibResource/dc:creator" -e "BibResource/dcterms:publisher/foaf:Agent/foaf:name" -e "BibResource/dcterms:date" |

    cut -d" " -f2- |

    paste -s -d ',' - |

    awk -F, -v isbn="${isbn_val}" '

    BEGIN{

        OFS = ","

    }

    {

        # $1から$4のいずれも空でない場合のみ処理
        if ($1 != "" && $2 != "" && $3 != "" && $4 != "") {

            if($5 != ""){

                # 海外本の翻訳者への対応
                print isbn, $1, $4, $5, $2 " " $3

            }else{

                print isbn, $1, $3, $4, $2

            }

        }

    }
    '
}
# ====== 関数の設定ここまで ======


# ====== メイン処理 ======
# 使用するAPIに応じて書籍情報を取得
if [ "${api}" = "openbd" ]; then

    result=$(fetch_openbd "${isbn}")

	# 結果が空かつフォールバックが有効な場合
    if [ -z "${result}" ] && [ "${fallback_enabled}" -eq 1 ]; then

		# 国立国会図書館から書籍情報を取得
        result=$(fetch_ndl "${isbn}")

    fi

elif [ "${api}" = "ndl" ]; then

    result=$(fetch_ndl "${isbn}")

	# 結果が空かつフォールバックが有効な場合
    if [ -z "${result}" ] && [ "${fallback_enabled}" -eq 1 ]; then

		# openBDから書籍情報を取得
        result=$(fetch_openbd "${isbn}")

    fi

fi

# "result"が空の場合
if [ -z "${result}" ] ; then

	# エラーメッセージを出力
    echo "No data found for ISBN: ${isbn}" 1>&2
    exit 1

else

	# 結果を出力
    echo "${result}"

fi
# ====== メイン処理ここまで ======

